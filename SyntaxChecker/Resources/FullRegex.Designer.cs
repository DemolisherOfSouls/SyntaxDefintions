//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyntaxChecker.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class FullRegex {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FullRegex() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SyntaxChecker.Properties.FullRegex", typeof(FullRegex).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (?mx)
        ///(?(DEFINE)
        ///  (?&apos;a&apos;.+)
        ///  (?&apos;key&apos;\.ShellClassInfo|ViewState)
        ///  (?&apos;prop&apos;LocalizedResourceName|InfoTip|IconResource|Mode|Vid|FolderType)
        ///  (?&apos;num&apos;[-\d]+)
        ///)
        ///\[
        ///(?:
        ///  (?&apos;keyname&apos;(?&amp;key)) |
        ///  (?&lt;err_key&gt;(?&amp;a))
        ///)
        ///\]|
        ///(?:
        ///  (?&apos;propname&apos;(?&amp;prop)) |
        ///  (?&lt;err_prop&gt;(?&amp;a))
        ///)
        ///=
        ///(?&apos;value&apos;[^,\n]*)
        ///(?:,
        ///  (?&apos;index&apos;(?&amp;num))
        ///)?.
        /// </summary>
        public static string properties_desktop {
            get {
                return ResourceManager.GetString("properties-desktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ((?:(\?-?[ixmgd]+(?:-[idgmx]+)?)|(\(\?\&amp;\w+\))|(\((?:\?\:|\?!|\?=]|\?&lt;!|\?&lt;=|\?&gt;)(?R)\))|(\((?R)\))|(\\\\?[\\|{}?[\]()AaBbDdSsWwnNhHvVK0-9])|(\[\^?[^\]]+\])|([\w.^$-]+))(?:[+*?]?[?+]?|\{\d+\})|(\|))+.
        /// </summary>
        public static string regex {
            get {
                return ResourceManager.GetString("regex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (?imsx) #Case Insensitive, Multiline, singleline, extended
        ///(?(DEFINE)
        ///  (?&apos;w8&apos;[\w\)\(\^\-]{1,8})
        ///  (?&apos;cm&apos;\s*\,\s*)
        ///  (?&apos;lb&apos;\s*\}\s*)
        ///  (?&apos;d&apos;\-?\d+(?:\.\d+)?)
        ///  (?&apos;rb&apos;\s*\{\s*)
        ///  (?&apos;str&apos;[\w]+)
        ///  (?&apos;style&apos;Add|Copy|CopyAlpha|CopyNewAlpha|Modulate|Overlay|ReverseSubtract|Subtract|Translucent)
        ///)
        ///
        ///(?&apos;tex_block&apos;texture) \s+ (?&apos;texture&apos;(?&amp;w8)) (?&amp;cm) (?&apos;width&apos;(?&amp;d)) (?&amp;cm) (?&apos;height&apos;(?&amp;d)) \s+
        ///(?&apos;inside_tex&apos;(?&amp;rb)
        ///
        ///  (?: (?&apos;tex_prop&apos;xscale|yscale) \s+ (?&apos;tex_value&apos;(?&amp;d)) \s+ ) {0,2}|
        ///  
        ///  (?&apos;patch_w [rest of string was truncated]&quot;;.
        /// </summary>
        public static string zdoom_textures {
            get {
                return ResourceManager.GetString("zdoom-textures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (?xm-i)(?(DEFINE)
        ///  (?&apos;float&apos; (?i) [+-]?\d+\.\d*(e[+-]?\d+)?)
        ///  (?&apos;integer&apos; (?i) [+-]?\d+| 0x[\da-f]+)
        ///  (?&apos;bool&apos;(?i)true|false)
        ///  (?&apos;quoted_string&apos; \&quot;([^&quot;\\]*(\\.[^&quot;\\]*)*)\&quot;)
        ///  (?&apos;keyword&apos; [^\s{}();&quot;&apos;]+)
        ///  (?&apos;value&apos; (?&amp;integer) | (?&amp;float) | (?&amp;quoted_string) | (?&amp;keyword)| (?&amp;specdata) | (?&amp;bool) )
        ///  (?&apos;identifier&apos; (?i) [a-z_]+[a-z\d_]*)
        ///  
        ///  (?&apos;block&apos; \s*+   (?&amp;blkkeyword)    \s*+   (?&amp;comment)? \{   \s*+ (?&amp;comment)?
        ///	(?&amp;assignment_expr)*    (?&amp;comment)?     \s*+   \})
        ///
        ///  (?&apos;comment&apos; (?&gt;\/{ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string zdoom_udmf {
            get {
                return ResourceManager.GetString("zdoom-udmf", resourceCulture);
            }
        }
    }
}
