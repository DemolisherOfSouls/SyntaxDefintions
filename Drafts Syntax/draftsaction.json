{
  "name": "Drafts Action",
  "description": "Complete JavaScript keyword and markup highlighting with Drafts Action Objects",
  "sampleText": "//JavaScript Syntax\n\nconst n = 100;\nlet s = \"string value\";\n/* Block Comment */\nvar v = 0x7fffFFFf;\n\nif (n < 1000)\n{\n  console.log(\"hello\");\n}\n\nclass newClass extends oldClass\n{\n  constructor()\n  {\n    this.prop = 4;\n    super();\n  }\n\n    publicMethod()\n    {\n      var x = prop.toString();\n    }\n}",
  "author": "Grincess",
  "scopeName": "text.javascript.drafts",
  "rangeExtensionType": {"default": "lookAround1000"},
  "listCompletionDefinitions":[],
  "fileExtensions":["draftsaction"],

  "patterns": [{
    "match": "(\\/\\*[\\S\\s]*?\\*\\/)",
    "exclusive": true,
    "comment": "Block comment",
    "captures":{"0":{"scope":"code.comment"}}
  },{
    "match": "(\\/\\/)(.*)",
    "exclusive": true,
    "comment": "Inline comment",
    "captures":{"0":{"scope":"code.comment"}}
  },{
    "match": "(['\"])(?:(?!(?:\\\\|\\1)).|\\\\.)*\\1",
    "exclusive": false,
    "comment": "String Literal",
    "captures":{"0":{"scope":"code.string"}}
  },{
    "match": "([\\/])(?:(?!(?:\\\\|\\1)).|\\\\.)*\\1([gim]*)",
    "exclusive": true,
    "comment": "RegEx Literal",
    "captures":{"0":{"scope":"code.literal"}}
  },{
    "match": "\\b(true|false|undefined|null|NaN)\\b",
    "exclusive": true,
    "comment": "Special Values",
    "captures":{"0":{"scope":"code.class"}}
  },{
    "match": "\\b(alert)\\b",
    "exclusive": true,
    "comment": "Global Functions",
    "captures":
      {"0":{"scope": "code.method"}}
  },{
    "match": "\\b(-?(?:(0x[\\da-fA-F]+)|(\\d*\\.?\\d+(?:e[+-]?\\d+)?)))\\b",
    "exclusive": true,
    "comment": "Number",
    "captures":
    {
        "1": {"scope":"code.literal"},
        "2": {"scope":"code.literal"}}
  },{
    "match": "([-+!=<>&|~^%?*\\\/\\\\])",
    "exclusive": false,
    "comment": "Operator",
    "captures": {"0":{"scope":"code.operator"}}
  },{
    "match": "([{}\\[\\];(),.:])",
    "exclusive": false,
    "comment": "Punctuation",
    "captures":{"0":{"scope":"code.punctuation"}}
  },{
    "match": "\\b(and|or|xor|for|do|while|each|as|return|exit|if|of|then|else|new|delete|try|throw|catch|finally|class|function|var|const|let|static|extends|switch|this|self|super|in|import|constructor|export|get|set|require)\\b",
    "exclusive": true,
    "comment": "JavaScript Keyword",
    "captures":{"0":{"scope":"code.keyword"}}
  },{
    "match": "\\b(Array|String|Object|Integer|Boolean|Symbol|Function|Map|Set|WeakMap|WeakSet|Math|Date|Promise|Number|NodeList|JSON|Generator|Error|RegExp|ReferenceError|Draft|Editor|Workspace|GoogleDrive)\\b",
    "exclusive": true,
    "comment": "JavaScript Class",
    "captures":{"0":{"scope":"code.class"}}
  },{
    "match": "([\\w\"$]+)\\.(toString|eval|exec|replace|slice|join|split|concat|replace|match|startsWith|endsWith|indexOf|substr|toLowerCase|toUpperCase|parseInt|parseFloat|charAt|create|forEach|from|destroy|push|shift|splice|some|sort|reduce|reverse|map|pop|includes|keys|flat|flatMap|copyWithin|selectionStart|at|every|fill)\\b",
    "exclusive": false,
    "comment": "JavaScript Method",
    "captures":{"1":{"scope":"code.global"},
                "2":{"scope":"code.punctuation"},
                "3":{"scope":"code.method"}}
  },{
    "match": "\\b(length)\\b",
    "exclusive": true,
    "comment": "JavaScript Property",
    "captures":{"0":{"scope":"code.class"}}
  },{
    "match": "\\b(?:(?:draft)\\.(content|body|title|lines)|lastError|tags|name|type|buttonPressed)\\b",
    "exclusive": true,
    "comment": "Drafts Class Property",
    "captures":{"0":{"scope":"code.property"}}
  },{
    "match": "\\b(editor|context|device|app|action)\\b",
    "exclusive": true,
    "comment": "Drafts Global Property",
    "captures":{"0":{"scope":"code.global"}}
  },{
    "match": "\\b(Draft|Editor|Prompt|Script|Action|ActionGroup|Box|Dropbox|App|Syntax|Context|Share|Theme|Base64|Workspace|Version|Twitter|Alarm|Event|FileManager|GoogleDrive|GoogleTask|Mail|selectionRange|syntaxType)\\b",
    "exclusive": true,
    "comment": "Drafts Class",
    "captures":{"0":{"scope":"code.class"}}
  },{
    "match": "\\b(update|save|getText|load|activate|query|fail|cancel|read|write|addTag|hasTag|removeTag|shareAsFile|append|prepend|setClipboard)\\b",
    "exclusive": true,
    "comment": "Drafts Class Method",
    "captures":{"0":{"scope":"code.method"}}
  },{
    "match": "\\b(draftx|selection|dialog|gdrive)\\b",
    "exclusive": true,
    "comment": "My Library Global Property",
    "captures":{"0":{"scope":"code.global"}}
  },{
    "match": "\\b(File|)\\b",
    "exclusive": true,
    "comment": "My Library Class",
    "captures":{"0":{"scope":"code.global"}}
  }],
  "navigationPatterns": [{
    "match": "(\\/\\/)(?:s*)(#region)(.*)",
    "comment": "Region Comments",
    "rangeCapture": "0",
    "labelCapture": "1",
    "prefix": "#region",
    "level": 0
  },{
    "match": "\\b(function)\\b",
    "comment": "Function",
    "rangeCapture": "0",
    "labelCapture": "1",
    "prefix": "function",
    "level": 1
  },{
    "match": "\\b(class)\\b",
    "comment": "Class Definition",
    "rangeCapture": "0",
    "labelCapture": "1",
    "prefix": "class",
    "level": 1
  },{
    "match": "\\b(get|set)\\b",
    "comment": "Property Definition",
    "rangeCapture": "0",
    "labelCapture": "1",
    "prefix": "get",
    "level": 2
  }]
}
