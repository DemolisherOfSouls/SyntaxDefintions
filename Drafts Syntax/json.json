{
  "name": "JSON",
  "description": "Generic JSON highlighting",
  "sampleText": "{\n\"property\": \"value\",\n\"prop2\":\n{\n\t\"intin\":33\n}\n\"boolarr\":[ true, false ],\n}",
  "author": "Grincess",
  "scopeName": "text.json.generic",
  "rangeExtensionType": {"default": "lookAround1000"},
  "listCompletionDefinitions": [],
  "fileExtensions": ["json"],
  "navigationPatterns": [],
  "patterns": [{
    "match": "((?:.*\\n){4})(^[\\s\\S]*$)",
    "exclusive": false,
    "comment": "Code",
    "captures": {
      "2": {"scope": "text.monospace"}}
  },{
    "match": "\\b(true|false|undefined|null)\\b",
    "exclusive": false,
    "comment": "Literal",
    "captures": {
      "0": {"scope": "code.keyword"}}
  },{
    "match": "\\b-?(0x[\\da-fA-F]{4,16}|\\d*\\.?\\d+(e[+-]?\\d+)?)\\b",
    "exclusive": false,
    "comment": "Number",
    "captures": {
      "0": {"scope": "code.literal"}}
  },{
    "match": "(?i)(\\#[\\da-f]{6})",
    "exclusive": false,
    "comment": "Hex String",
    "captures": {
      "0": {"scope": "code.string"}}
  },{
    "match": "(\".*((?<!\\\\)|(?<=\\\\\\\\)))\")",
    "exclusive": false,
    "comment": "Quoted String",
    "captures": {
      "0": {"scope": "code.string"}}
  },{
    "match": "[:,]|([{}])|([[\\]])",
    "exclusive": false,
    "comment": "Operator",
    "captures": {
      "1": {"scope": "code.punctuation"},
      "2": {"scope": "code.method"},
      "3": {"scope": "code.property"}}
  },{
    "match": "\"(match)\"\\s*:\\s*\"(?:\\/(\\?([gims]+)\\-?([gims]*)\\)|\\(\\?\\:(.+?)\\)|(\\(.+?\\))|(\\[.+?\\])|\\{\\s*\\d+\\s*(?:,\\s*\\d*)\\}|(.*?))*\"(?<!\\\\)",
    "exclusive": false,
    "comment": "Match RegExp",
    "captures": {
      "1": {"scope": "code.method"},
      "2": {"scope": "code.property"}}
  },{
    "match": "(?i)\\A(.+)\\s*^(.+)\\s*^(icloud|nosave|iphone|googledrive)\\s*(drafts|projects|imported|(\\w+))?\\s*((?:drafts)?(?:syntax|theme|action)|script|registryShell|json|acs|batch|javascript|template|todolist|(\\w+))\\s*(src|(\\w+))?\n?",
    "exclusive": false,
    "comment": "Header",
    "captures": {
      "1": {"scope": "code.method"},
      "2": {"scope": "code.string"},
      "3": {"scope": "code.property"},
      "4": {"scope": "code.global"},
      "6": {"scope": "code.method"},
      "8": {"scope": "code.property"},
      "5": {"scope": "code.error"},
      "7": {"scope": "code.error"},
      "9": {"scope": "code.error"}}
  },{
    "match": "(\\\\[\\\\\"]|\\\\[fbntr0])",
    "exclusive": false,
    "comment": "Escaped Char",
    "captures": {
      "0": {"scope": "code.method"}}
  },{
    "match": "^.*,\\s*[\\]\\}].*$|(?<![\\\\])(\\\\[^fnt0r\"\\\\])|^.*[\\{\\[]\\s*,.*$|^.*\".*?\"\\s*\".*?\".*?$",
    "exclusive": false,
    "comment": "JSON Error (All)",
    "captures": {
      "0": {"scope": "code.error"}}
  },{
    "match": "(?-i)(?:\\\\\\\\)([aAbBdDEfFnQrsStwWXzZ0]|[\\[\\]{}()\\/?!$&.#^*+=><|',-]|[1-9][0-9]?|[NpP]\\{.*?\\}|c.|(?:\\\\\\\\))",
    "'exclusive": false,
    "comment": "Pseudo Escape",
    "captures": {
      "0": {"scope": "code.class"}}
  }]
}