{
  "name": "JSON",
  "description": "Generic JSON highlighting",
  "sampleText": "\"prop\": \"value\"",
  "author": "Grincess",
  "scopeName": "text.json.generic",
  "rangeExtensionType": {
    "default": "lookAround1000"
  },
  "listCompletionDefinitions": [],
  "fileExtensions":["json"],
  "navigationPatterns": [],
  "patterns":
  [
    {
      "match": "(.*)",
      "exclusive": false,
      "comment": "Code",
      "captures": {"0":{"scope":"text.monospace"}}
    },{
      "match": "\\b(true|false|undefined|null)\\b",
      "exclusive": false,
      "comment": "Literal",
      "captures": {"0":{"scope":"code.method"}}
    },{
      "match": "(lookAround(?:10|20|5)00)",
      "exclusive": false,
      "comment": "Range Types",
      "captures": {"0":{"scope":"code.property"}}
    },{
      "match": "\\b-?(?:0x[\\da-fA-F]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b",
      "exclusive": false,
      "comment": "Number",
      "captures": {"0":{"scope":"code.literal"}}
    },{
      "match": "([:,])|(\\\")|(\")|([{}])|([\\[\\]])", 
      "exclusive": false,
      "comment": "Operator",
      "captures": {
 "1":{"scope":"code.punctuation"},
 "2":{"scope":"code.property"},
 "3":{"scope":"code.literal"},
 "4":{"scope":"code.method"},
 "5":{"scope":"code.global"}}
    },{
      "match": "\"(match)\"\\s*\\:\\s*\"(.*?)\"",
      "exclusive": false,
      "comment": "Match RegExp",
      "captures": {
 "1":{"scope":"code.keyword"},
 "2":{"scope":"code.property"}}
    },{
      "match": "\\\\[^\\s]",
      "exclusive": false,
      "comment": "Match RegExp",
      "captures": {"0":{"scope":"code.escape"}}
    },{
      "match": "(^.*)(,)[\\s\\n\\r]*[\\]\\}]",
      "exclusive": false,
      "comment": "JSON Error (Trailing Comma)",
      "captures": {"0":{"scope":"code.error"}}
    }
  ]
}