{
  "name": "Javascript+",
  "description": "Complete JavaScript keyword and markup highlighting",
  "sampleText": "//JavaScript Syntax\n\nconst n = 100;\nlet s = \"string value\";\n/* Block Comment */\nvar v = 0x7fffFFFf;\n\nif (n < 1000)\n{\n\tconsole.log(\"hello\");\n}\n\nclass newClass extends Object\n{\n\tconstructor()\n\t{\n\t\tthis.prop = 4;\n\t\tsuper();\n\t}\n\n\tpublicMethod()\n\t\t{\n\t\t\tvar x = prop.toString();\n\t}\n}",
  "author": "Grincess",
  "scopeName": "text.javascript.adv",
  "rangeExtensionType": {
    "default": "lookAround1000"},
  "navigationPatterns": [],
  "listCompletionDefinitions": [],
  "fileExtensions":[
    "js"],
  "patterns":[{
    "match": "\\/\\*[\\S\\s]*?\\*\\/|\\/\\/.*",
    "exclusive": true,
    "comment": "Comment",
    "captures": {
      "0":{"scope": "code.comment"}}
  },{
    "match": "([`])(?:(?!(?:\\\\|\\1)).|\\\\.|\\n)*\\1",
    "exclusive": true,
    "comment": "Template Strings",
    "captures": {
      "0":{"scope": "code.literal"}}
  },{
    "match": "\\b('use strict')\\b",
    "exclusive": true,
    "comment": "Strict Modifier",
    "captures": {
      "0":{"scope": "code.keyword"}}
  },{
    "match": "(['\"])(?:(?!(?:\\\\|\\1)).|\\\\.)*\\1",
    "exclusive": false,
    "comment": "String Literal",
    "captures": {
      "0":{"scope": "code.literal"}}
  },{
    "match": "([\\/])(?:(?!(?:\\\\|\\1)).|\\\\.)*\\1([gmi]*)",
    "exclusive": true,
    "comment": "RegEx Literal",
    "captures": {
      "0":{"scope": "code.literal"}}
  },{
    "match": "\\b(true|false|undefined|null|NaN)\\b",
    "exclusive": true,
    "comment": "Defined Literal",
    "captures": {
      "0":{"scope": "code.class"}}
  },{
    "match": "\\b(-?(?:0x[\\da-fA-F]+)|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b",
    "exclusive": true,
    "comment": "Number Literal",
    "captures": {
      "0":{"scope": "code.literal"}}
  },{
    "match": "(--?|\\{2}+?|!=?=?|<=?|>=?|={1,3}|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%|=>)",
    "exclusive": false,
    "comment": "Operator",
    "captures": {
      "0":{"scope": "code.operator"}}
  },{
    "match": "([{}\\[\\];(),.:])",
    "exclusive": false,
    "comment": "Punctuation and Brackets",
    "captures": {
      "0":{"scope": "code.punctuation"}}
  },{
    "match": "\\b(and|or|xor|for|do|while|each|as|return|exit|if|of|then|else|new|delete|try|throw|catch|finally|class|function|var|const|let|static|extends|switch|case|default|this|self|super|in|import|create|constructor|export|get|set|typeof)\\b",
    "exclusive": true,
    "comment": "JavaScript Keyword",
    "captures": {
      "0":{"scope": "code.keyword"}}
  },{
    "match": "\\b(Array|String|Object|Integer|Boolean|Symbol|Function|(?:Weak)?(?:Map|Set)|Math|Date|Promise|Number|NodeList|JSON|Generator|Error|RegExp|ReferenceError)\\b",
    "exclusive": true,
    "comment": "JavaScript Class",
    "captures": {
      "0":{"scope": "code.class"}}
  },{
    "match": "\\b(toString|eval|exec|replace|slice|join|split|concat|replace|match|(?:starts|ends)With|indexOf|substr|to(?:Lower|Upper)Case|parse(?:Int|Float)|charAt|forEach|from|destroy|push|shift|splice|some|sort|reduce|reverse|map|pop|includes|keys|flat(?:Map)|copyWithin|at|every|fill|)\\b",
    "exclusive": true,
    "comment": "JavaScript Method",
    "captures": {
      "0":{"scope": "code.method"}}
  },{
    "match": "\\b(length)\\b",
    "exclusive": true,
    "comment": "JavaScript Property",
    "captures": {
      "0": {"scope": "code.class"}}
  }]
}
